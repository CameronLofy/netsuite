{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"netsuite","text":"<p>Make async requests to NetSuite SuiteTalk SOAP/REST Web Services and Restlets</p>"},{"location":"#installation","title":"Installation","text":"<p>With default features (REST API + Restlet support):</p> <pre><code>pip install netsuite\n</code></pre> <p>With Web Services SOAP API support:</p> <pre><code>pip install netsuite[soap_api]\n</code></pre> <p>With CLI support:</p> <pre><code>pip install netsuite[cli]\n</code></pre> <p>With <code>orjson</code> package (faster JSON handling):</p> <pre><code>pip install netsuite[orjson]\n</code></pre> <p>With all features:</p> <pre><code>pip install netsuite[all]\n</code></pre>"},{"location":"#programmatic-use","title":"Programmatic use","text":"<pre><code>import asyncio\n\nfrom netsuite import NetSuite, Config, TokenAuth\n\nconfig = Config(\n    account=\"12345\",\n    auth=TokenAuth(consumer_key=\"abc\", consumer_secret=\"123\", token_id=\"xyz\", token_secret=\"456\"),\n)\n\nns = NetSuite(config)\n\n\nasync def async_main():\n    rest_api_results = await ns.rest_api.get(\"/record/v1/salesOrder\")\n\n    restlet_results = await ns.restlet.get(987, deploy=2)\n\n    # NOTE: SOAP needs `pip install netsuite[soap_api]`\n    soap_api_results = await ns.soap_api.getList('customer', internalIds=[1337])\n\n    # Multiple requests, using the same underlying connection\n    async with ns.soap_api:\n        customers = await ns.soap_api.getList('customer', internalIds=[1, 2, 3])\n        sales_orders = await ns.soap_api.getList('salesOrder', internalIds=[1, 2])\n\nif __name__ == \"__main__\":\n    asyncio.run(async_main())\n\n</code></pre>"},{"location":"#cli","title":"CLI","text":""},{"location":"#configuration","title":"Configuration","text":"<p>To use the command line utilities you must add a config file with a section in this format:</p> <pre><code>[netsuite]\nauth_type = token\naccount = 123456\nconsumer_key = 789123\nconsumer_secret = 456789\ntoken_id = 012345\ntoken_secret = 678901\n</code></pre> <p>You can add multiple sections like this. The <code>netsuite</code> section will be read by default, but can be overridden using the <code>-c</code> flag.</p> <p>The default location that will be read is <code>~/.config/netsuite.ini</code>. This can overriden with the <code>-p</code> flag.</p> <p>Append <code>--help</code> to the commands to see full documentation.</p>"},{"location":"#rest-api-make-requests-to-netsuite-rest-api","title":"<code>rest-api</code> - Make requests to NetSuite REST API","text":"<p>See the NetSuite help center for info on how to use the REST API. The <code>netsuite rest-api openapi-serve</code> command is also a big help.</p>"},{"location":"#netsuite-rest-api-get","title":"<code>netsuite rest-api get</code>","text":"<p>List endpoint examples:</p> <pre><code>$ netsuite rest-api get /record/v1/customer\n</code></pre> <pre><code>$ netsuite rest-api get /record/v1/invoice --limit 10 --offset 30\n</code></pre> <pre><code>$ netsuite rest-api get /record/v1/salesOrder --query 'email IS \"john.doe@example.com\"'\n</code></pre> <p>Detail endpoint examples:</p> <pre><code>$ netsuite rest-api get /record/v1/salesOrder/1337\n</code></pre> <pre><code>$ netsuite rest-api get /record/v1/invoice/123 --expandSubResources\n</code></pre>"},{"location":"#netsuite-rest-api-post","title":"<code>netsuite rest-api post</code>","text":"<p>Examples:</p> <pre><code>$ cat ~/customer-no-1-data.json | netsuite rest-api post /record/v1/customer -\n</code></pre>"},{"location":"#netsuite-rest-api-put","title":"<code>netsuite rest-api put</code>","text":"<p>Examples:</p> <pre><code>$ cat ~/customer-no-1-data.json | netsuite rest-api put /record/v1/customer/123 -\n</code></pre>"},{"location":"#netsuite-rest-api-patch","title":"<code>netsuite rest-api patch</code>","text":"<p>Examples:</p> <pre><code>$ cat ~/changed-customer-data.json | netsuite rest-api patch /record/v1/customer/123 -\n</code></pre>"},{"location":"#netsuite-rest-api-delete","title":"<code>netsuite rest-api delete</code>","text":"<p>Examples:</p> <pre><code>$ netsuite rest-api delete /record/v1/customer/123\n</code></pre>"},{"location":"#netsuite-rest-api-jsonschema","title":"<code>netsuite rest-api jsonschema</code>","text":"<p>Examples:</p> <pre><code>$ netsuite rest-api jsonschema salesOrder\n{\"type\":\"object\",\"properties\":...\n</code></pre>"},{"location":"#netsuite-rest-api-openapi","title":"<code>netsuite rest-api openapi</code>","text":"<p>Examples:</p> <pre><code>$ netsuite rest-api openapi salesOrder customer invoice\n{\"openapi\":\"3.0.1\",\"info\":{\"title\":\"NetSuite REST Record API\"...\n</code></pre>"},{"location":"#netsuite-rest-api-openapi-serve","title":"<code>netsuite rest-api openapi-serve</code>","text":"<p>Start a server that fetches and lists the OpenAPI spec for the given record types, using Swagger UI. Defaults to port 8000.</p> <p>Examples:</p> <pre><code>$ netsuite rest-api openapi-serve customer salesOrder\nINFO:netsuite:Fetching OpenAPI spec for record types customer, salesOrder...\nINFO:netsuite:NetSuite REST API docs available at http://127.0.0.1:8001\n</code></pre> <p>It's also possible to fetch the OpenAPI spec for all known record types. This will however take a long time (60+ seconds).</p> <pre><code>$ netsuite rest-api openapi-serve\nWARNING:netsuite:Fetching OpenAPI spec for ALL known record types... This will take a long time! (Consider providing only the record types of interest by passing their names to this command as positional arguments)\nINFO:netsuite:NetSuite REST API docs available at http://127.0.0.1:8001\n</code></pre>"},{"location":"#interact-interact-with-soaprest-web-services-and-restlets","title":"<code>interact</code> - Interact with SOAP/REST web services and restlets","text":"<p>Starts an IPython REPL where you can interact with the client.</p> <pre><code>$ netsuite interact\nWelcome to Netsuite WS client interactive mode\nAvailable vars:\n    `ns` - NetSuite client\n\nExample usage:\n    soap_api_results = ns.soap_api.getList('customer', internalIds=[1337])\n    rest_api_results = await ns.rest_api.get(\"/record/v1/salesOrder\")\n    restlet_results = await ns.restlet.get(987, deploy=2)\n\nIn [1]: rest_api_results = await ns.rest_api.get(\"\n</code></pre>"},{"location":"#restlet-make-requests-to-restlets","title":"<code>restlet</code> - Make requests to restlets","text":"<pre><code>$ echo '{\"savedSearchId\": 987}' | netsuite restlet 123 -\n</code></pre>"},{"location":"#developers","title":"Developers","text":"<p>To run the tests, do:</p> <ol> <li>Install Poetry (https://python-poetry.org/docs/)</li> <li>Install dependencies <code>poetry install --extras all</code></li> <li>Run tests: <code>poetry run pytest</code></li> </ol> <p>Before committing and publishing a pull request, do:</p> <ol> <li>Install pre-commit globally: <code>pip install pre-commit</code></li> <li>Run <code>pre-commit install</code> to install the Git hook</li> </ol> <p>pre-commit will ensure that all code is formatted per our conventions. Failing to run this will probably make the CI tests fail in the PR instead.</p>"}]}